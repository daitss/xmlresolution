#!/usr/bin/env ruby

# Validate the files given on the command line with a java-based validator.

require 'socket'

proxy = case Socket.gethostname
        when /sacred.net/          ; 'satyagraha.sacred.net:3128'
        when /fcla.edu/, /local/   ; 'sake.fcla.edu:3128'
        else
          STDERR.puts "Can't figure out how to assign a proxy - on an unsupported network."
          exit
        end

proxy_host, proxy_port = proxy.split(':')

jarfile = 'xmlvalidator.jar'
jarpath = File.join(File.dirname(__FILE__), jarfile)

if not File.exists? jarpath
  STDERR.puts "Can't find #{jarfile} (checked #{File.dirname(__FILE__)})"
  exit
end

ARGV.each do |file|
  if (not File.exists? file) 
    STDERR.puts "File #{file} does not exist, skipping.\n";
    next;
  end

  cmd = "java -Dhttp.proxyHost=#{proxy_host} -Dhttp.proxyPort=#{proxy_port} -Dfile='#{file}' -jar '#{jarfile}'"
  puts cmd
  puts `#{cmd}`
end
